#!/bin/bash

# Get notification count
get_notification_count() {
    if makoctl list &>/dev/null; then
        count=$(makoctl list | jq '.data | length')
        if [ "$count" -gt 0 ] && [ "$count" != "null" ]; then
            echo "{\"text\": \"$count\", \"tooltip\": \"$count notifications\", \"alt\": \"notification\"}"
        else
            echo "{\"text\": \"\", \"tooltip\": \"No notifications\", \"alt\": \"none\"}"
        fi
    else
        echo "{\"text\": \"\", \"tooltip\": \"No notifications\", \"alt\": \"none\"}"
    fi
}

# Get tooltip with recent notifications
get_tooltip() {
    makoctl list | jq -r '.data[] | .summary' | head -n 5 | sed ':a;N;$!ba;s/\n/\\n/g'
}

# Handle clicks
case $1 in
    "count")
        get_notification_count
        ;;
    "tooltip")
        get_tooltip
        ;;
    "show")
        if makoctl list &>/dev/null; then
            count=$(makoctl list | jq '.data | length')
            if [ "$count" -gt 0 ] && [ "$count" != "null" ]; then
                # Get notifications directly from makoctl and pipe to wofi
                selected=$(makoctl list | jq -r '.data[] | "üìù " + .summary' | wofi --dmenu --cache-file=/dev/null)
                
                if [ ! -z "$selected" ]; then
                    # Remove the emoji prefix for matching
                    clean_selected="${selected#üìù }"
                    
                    # Get the notification body using the summary to match
                    notification=$(makoctl list | jq -r ".data[] | select(.summary == \"$clean_selected\") | .body")
                    notify-send "Notification Details" "$notification"
                fi
            else
                notify-send "No Notifications" "Your notification tray is empty"
            fi
        else
            notify-send "No Notifications" "Your notification tray is empty"
        fi
        ;;
esac
