#!/bin/bash

# Get notification count
get_notification_count() {
    count=$(makoctl list | jq '.data | length')
    icon="Û∞Çõ"  # icon for no notifications
    if [ "$count" -gt 0 ]; then
        icon="Û∞Çö"  # icon for having notifications
    fi
    # Output proper JSON format
    if [ "$count" -gt 0 ]; then
        echo "{\"text\": \"$count\", \"tooltip\": \"$count notifications\", \"class\": \"notification\"}"
    else
        echo "{\"text\": \"0\", \"tooltip\": \"No notifications\", \"class\": \"none\"}"
    fi
}

# Get tooltip with recent notifications
get_tooltip() {
    makoctl list | jq -r '.data[] | .summary' | head -n 5 | sed ':a;N;$!ba;s/\n/\\n/g'
}

# Handle clicks
case $1 in
    "count")
        get_notification_count
        ;;
    "tooltip")
        get_tooltip
        ;;
    "show")
        # Get notifications directly from makoctl and pipe to wofi
        selected=$(makoctl list | jq -r '.data[] | "üìù " + .summary' | wofi --dmenu --cache-file=/dev/null)
        
        if [ ! -z "$selected" ]; then
            # Remove the emoji prefix for matching
            clean_selected="${selected#üìù }"
            
            # Get the notification body using the summary to match
            notification=$(makoctl list | jq -r ".data[] | select(.summary == \"$clean_selected\") | .body")
            notify-send "Notification Details" "$notification"
        fi
        ;;
esac
