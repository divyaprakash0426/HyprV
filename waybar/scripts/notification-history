#!/bin/bash

# Get history notification count
get_notification_count() {
    if makoctl history &>/dev/null; then
        history_count=$(makoctl history | jq '.data[0] | length')
        
        if [ "$history_count" -gt 0 ] && [ "$history_count" != "null" ]; then
            echo "{\"text\": \"$history_count\", \"tooltip\": \"$history_count notifications in history\", \"alt\": \"notification\"}"
        else
            echo "{\"text\": \"\", \"tooltip\": \"No notification history\", \"alt\": \"none\"}"
        fi
    else
        echo "{\"text\": \"\", \"tooltip\": \"No notification history\", \"alt\": \"none\"}"
    fi
}

# Get tooltip with recent history notifications
get_tooltip() {
    makoctl history | jq -r '.data[0][] | .summary.data' | head -n 5 | sed ':a;N;$!ba;s/\n/\\n/g'
}

# Handle clicks
case $1 in
    "count")
        get_notification_count
        ;;
    "tooltip")
        get_tooltip
        ;;
    "show")
        if makoctl history &>/dev/null; then
            # Get history notifications
            notifications=$(makoctl history | jq '.data[0][] | {summary: .summary.data, body: .body.data, app_icon: (."app-icon".data // "")}')
            
            if [ ! -z "$notifications" ]; then
                # Format notifications for wofi
                wofi_input=$(echo "$notifications" | jq -r '. | "\(.app_icon)\t\(.summary)"')
                
                # Debug output
                echo "Debug: Notifications JSON:" >&2
                echo "$notifications" >&2
                echo "Debug: Wofi input:" >&2
                echo "$wofi_input" >&2
                
                # Show notifications in wofi
                selected=$(echo "$wofi_input" | wofi --dmenu --cache-file=/dev/null --prompt="Notification History" --width=400 --height=200 --show-icons 2>/dev/null)
                
                if [ ! -z "$selected" ]; then
                    # Remove the icon path and tab for matching
                    clean_selected="${selected#*$'\t'}"
                    
                    # Get the notification body using the summary to match
                    notification=$(echo "$notifications" | jq -s -r ".[] | select(.summary == \"$clean_selected\") | .body")
                    if [ ! -z "$notification" ]; then
                        notify-send "History Notification" "$notification"
                    else
                        notify-send "History Notification" "No additional details available"
                    fi
                fi
            else
                notify-send "No History" "Your notification history is empty"
            fi
        else
            notify-send "No History" "Your notification history is empty"
        fi
        ;;
esac
